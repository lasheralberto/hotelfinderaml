# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HotelArrayJson(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, address_locality: str=None, address_postal_code: str=None, category: str=None, cityname: str=None, date_update: int=None, distance: int=None, distance_in_time: str=None, guest_reviews_rating: float=None, id: int=None, locations: str=None, name_x: str=None, name_y: str=None, neighbourhood: str=None, rate_plan_price_exact_current: float=None, star_rating: float=None, supplier_hotel_id: int=None, type_transports: str=None):  # noqa: E501
        """HotelArrayJson - a model defined in Swagger

        :param address_locality: The address_locality of this HotelArrayJson.  # noqa: E501
        :type address_locality: str
        :param address_postal_code: The address_postal_code of this HotelArrayJson.  # noqa: E501
        :type address_postal_code: str
        :param category: The category of this HotelArrayJson.  # noqa: E501
        :type category: str
        :param cityname: The cityname of this HotelArrayJson.  # noqa: E501
        :type cityname: str
        :param date_update: The date_update of this HotelArrayJson.  # noqa: E501
        :type date_update: int
        :param distance: The distance of this HotelArrayJson.  # noqa: E501
        :type distance: int
        :param distance_in_time: The distance_in_time of this HotelArrayJson.  # noqa: E501
        :type distance_in_time: str
        :param guest_reviews_rating: The guest_reviews_rating of this HotelArrayJson.  # noqa: E501
        :type guest_reviews_rating: float
        :param id: The id of this HotelArrayJson.  # noqa: E501
        :type id: int
        :param locations: The locations of this HotelArrayJson.  # noqa: E501
        :type locations: str
        :param name_x: The name_x of this HotelArrayJson.  # noqa: E501
        :type name_x: str
        :param name_y: The name_y of this HotelArrayJson.  # noqa: E501
        :type name_y: str
        :param neighbourhood: The neighbourhood of this HotelArrayJson.  # noqa: E501
        :type neighbourhood: str
        :param rate_plan_price_exact_current: The rate_plan_price_exact_current of this HotelArrayJson.  # noqa: E501
        :type rate_plan_price_exact_current: float
        :param star_rating: The star_rating of this HotelArrayJson.  # noqa: E501
        :type star_rating: float
        :param supplier_hotel_id: The supplier_hotel_id of this HotelArrayJson.  # noqa: E501
        :type supplier_hotel_id: int
        :param type_transports: The type_transports of this HotelArrayJson.  # noqa: E501
        :type type_transports: str
        """
        self.swagger_types = {
            'address_locality': str,
            'address_postal_code': str,
            'category': str,
            'cityname': str,
            'date_update': int,
            'distance': int,
            'distance_in_time': str,
            'guest_reviews_rating': float,
            'id': int,
            'locations': str,
            'name_x': str,
            'name_y': str,
            'neighbourhood': str,
            'rate_plan_price_exact_current': float,
            'star_rating': float,
            'supplier_hotel_id': int,
            'type_transports': str
        }

        self.attribute_map = {
            'address_locality': 'address.locality',
            'address_postal_code': 'address.postalCode',
            'category': 'category',
            'cityname': 'cityname',
            'date_update': 'date_update',
            'distance': 'distance',
            'distance_in_time': 'distanceInTime',
            'guest_reviews_rating': 'guestReviews.rating',
            'id': 'id',
            'locations': 'locations',
            'name_x': 'name_x',
            'name_y': 'name_y',
            'neighbourhood': 'neighbourhood',
            'rate_plan_price_exact_current': 'ratePlan.price.exactCurrent',
            'star_rating': 'starRating',
            'supplier_hotel_id': 'supplierHotelId',
            'type_transports': 'type_transports'
        }

        self._address_locality = address_locality
        self._address_postal_code = address_postal_code
        self._category = category
        self._cityname = cityname
        self._date_update = date_update
        self._distance = distance
        self._distance_in_time = distance_in_time
        self._guest_reviews_rating = guest_reviews_rating
        self._id = id
        self._locations = locations
        self._name_x = name_x
        self._name_y = name_y
        self._neighbourhood = neighbourhood
        self._rate_plan_price_exact_current = rate_plan_price_exact_current
        self._star_rating = star_rating
        self._supplier_hotel_id = supplier_hotel_id
        self._type_transports = type_transports

    @classmethod
    def from_dict(cls, dikt) -> 'HotelArrayJson':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HotelArrayJson of this HotelArrayJson.  # noqa: E501
        :rtype: HotelArrayJson
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_locality(self) -> str:
        """Gets the address_locality of this HotelArrayJson.


        :return: The address_locality of this HotelArrayJson.
        :rtype: str
        """
        return self._address_locality

    @address_locality.setter
    def address_locality(self, address_locality: str):
        """Sets the address_locality of this HotelArrayJson.


        :param address_locality: The address_locality of this HotelArrayJson.
        :type address_locality: str
        """

        self._address_locality = address_locality

    @property
    def address_postal_code(self) -> str:
        """Gets the address_postal_code of this HotelArrayJson.


        :return: The address_postal_code of this HotelArrayJson.
        :rtype: str
        """
        return self._address_postal_code

    @address_postal_code.setter
    def address_postal_code(self, address_postal_code: str):
        """Sets the address_postal_code of this HotelArrayJson.


        :param address_postal_code: The address_postal_code of this HotelArrayJson.
        :type address_postal_code: str
        """

        self._address_postal_code = address_postal_code

    @property
    def category(self) -> str:
        """Gets the category of this HotelArrayJson.


        :return: The category of this HotelArrayJson.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this HotelArrayJson.


        :param category: The category of this HotelArrayJson.
        :type category: str
        """

        self._category = category

    @property
    def cityname(self) -> str:
        """Gets the cityname of this HotelArrayJson.


        :return: The cityname of this HotelArrayJson.
        :rtype: str
        """
        return self._cityname

    @cityname.setter
    def cityname(self, cityname: str):
        """Sets the cityname of this HotelArrayJson.


        :param cityname: The cityname of this HotelArrayJson.
        :type cityname: str
        """

        self._cityname = cityname

    @property
    def date_update(self) -> int:
        """Gets the date_update of this HotelArrayJson.


        :return: The date_update of this HotelArrayJson.
        :rtype: int
        """
        return self._date_update

    @date_update.setter
    def date_update(self, date_update: int):
        """Sets the date_update of this HotelArrayJson.


        :param date_update: The date_update of this HotelArrayJson.
        :type date_update: int
        """

        self._date_update = date_update

    @property
    def distance(self) -> int:
        """Gets the distance of this HotelArrayJson.


        :return: The distance of this HotelArrayJson.
        :rtype: int
        """
        return self._distance

    @distance.setter
    def distance(self, distance: int):
        """Sets the distance of this HotelArrayJson.


        :param distance: The distance of this HotelArrayJson.
        :type distance: int
        """

        self._distance = distance

    @property
    def distance_in_time(self) -> str:
        """Gets the distance_in_time of this HotelArrayJson.


        :return: The distance_in_time of this HotelArrayJson.
        :rtype: str
        """
        return self._distance_in_time

    @distance_in_time.setter
    def distance_in_time(self, distance_in_time: str):
        """Sets the distance_in_time of this HotelArrayJson.


        :param distance_in_time: The distance_in_time of this HotelArrayJson.
        :type distance_in_time: str
        """

        self._distance_in_time = distance_in_time

    @property
    def guest_reviews_rating(self) -> float:
        """Gets the guest_reviews_rating of this HotelArrayJson.


        :return: The guest_reviews_rating of this HotelArrayJson.
        :rtype: float
        """
        return self._guest_reviews_rating

    @guest_reviews_rating.setter
    def guest_reviews_rating(self, guest_reviews_rating: float):
        """Sets the guest_reviews_rating of this HotelArrayJson.


        :param guest_reviews_rating: The guest_reviews_rating of this HotelArrayJson.
        :type guest_reviews_rating: float
        """

        self._guest_reviews_rating = guest_reviews_rating

    @property
    def id(self) -> int:
        """Gets the id of this HotelArrayJson.


        :return: The id of this HotelArrayJson.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this HotelArrayJson.


        :param id: The id of this HotelArrayJson.
        :type id: int
        """

        self._id = id

    @property
    def locations(self) -> str:
        """Gets the locations of this HotelArrayJson.


        :return: The locations of this HotelArrayJson.
        :rtype: str
        """
        return self._locations

    @locations.setter
    def locations(self, locations: str):
        """Sets the locations of this HotelArrayJson.


        :param locations: The locations of this HotelArrayJson.
        :type locations: str
        """

        self._locations = locations

    @property
    def name_x(self) -> str:
        """Gets the name_x of this HotelArrayJson.


        :return: The name_x of this HotelArrayJson.
        :rtype: str
        """
        return self._name_x

    @name_x.setter
    def name_x(self, name_x: str):
        """Sets the name_x of this HotelArrayJson.


        :param name_x: The name_x of this HotelArrayJson.
        :type name_x: str
        """

        self._name_x = name_x

    @property
    def name_y(self) -> str:
        """Gets the name_y of this HotelArrayJson.


        :return: The name_y of this HotelArrayJson.
        :rtype: str
        """
        return self._name_y

    @name_y.setter
    def name_y(self, name_y: str):
        """Sets the name_y of this HotelArrayJson.


        :param name_y: The name_y of this HotelArrayJson.
        :type name_y: str
        """

        self._name_y = name_y

    @property
    def neighbourhood(self) -> str:
        """Gets the neighbourhood of this HotelArrayJson.


        :return: The neighbourhood of this HotelArrayJson.
        :rtype: str
        """
        return self._neighbourhood

    @neighbourhood.setter
    def neighbourhood(self, neighbourhood: str):
        """Sets the neighbourhood of this HotelArrayJson.


        :param neighbourhood: The neighbourhood of this HotelArrayJson.
        :type neighbourhood: str
        """

        self._neighbourhood = neighbourhood

    @property
    def rate_plan_price_exact_current(self) -> float:
        """Gets the rate_plan_price_exact_current of this HotelArrayJson.


        :return: The rate_plan_price_exact_current of this HotelArrayJson.
        :rtype: float
        """
        return self._rate_plan_price_exact_current

    @rate_plan_price_exact_current.setter
    def rate_plan_price_exact_current(self, rate_plan_price_exact_current: float):
        """Sets the rate_plan_price_exact_current of this HotelArrayJson.


        :param rate_plan_price_exact_current: The rate_plan_price_exact_current of this HotelArrayJson.
        :type rate_plan_price_exact_current: float
        """

        self._rate_plan_price_exact_current = rate_plan_price_exact_current

    @property
    def star_rating(self) -> float:
        """Gets the star_rating of this HotelArrayJson.


        :return: The star_rating of this HotelArrayJson.
        :rtype: float
        """
        return self._star_rating

    @star_rating.setter
    def star_rating(self, star_rating: float):
        """Sets the star_rating of this HotelArrayJson.


        :param star_rating: The star_rating of this HotelArrayJson.
        :type star_rating: float
        """

        self._star_rating = star_rating

    @property
    def supplier_hotel_id(self) -> int:
        """Gets the supplier_hotel_id of this HotelArrayJson.


        :return: The supplier_hotel_id of this HotelArrayJson.
        :rtype: int
        """
        return self._supplier_hotel_id

    @supplier_hotel_id.setter
    def supplier_hotel_id(self, supplier_hotel_id: int):
        """Sets the supplier_hotel_id of this HotelArrayJson.


        :param supplier_hotel_id: The supplier_hotel_id of this HotelArrayJson.
        :type supplier_hotel_id: int
        """

        self._supplier_hotel_id = supplier_hotel_id

    @property
    def type_transports(self) -> str:
        """Gets the type_transports of this HotelArrayJson.


        :return: The type_transports of this HotelArrayJson.
        :rtype: str
        """
        return self._type_transports

    @type_transports.setter
    def type_transports(self, type_transports: str):
        """Sets the type_transports of this HotelArrayJson.


        :param type_transports: The type_transports of this HotelArrayJson.
        :type type_transports: str
        """

        self._type_transports = type_transports
